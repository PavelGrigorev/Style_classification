# -*- coding: utf-8 -*-
"""Копия блокнота "style_xception_top_3"

Automatically generated by Colaboratory.

#created by Pavel Grigorev for Neural Univercity 2021.08.10

Original file is located at
    https://colab.research.google.com/drive/1bIoZHL27DrGFVYtFajFX-4MquxE1q0A3
"""

import tensorflow as tf
import numpy as np

image_path = './images'
image_size = (299,299)
model_path = './model/model.h5'
# get model
model = tf.keras.models.load_model(model_path)
# class names
class_names = ['Арт-нуво', 'Современный', 'Романтизм', 'Минимализм', 'Прованс', 'Лофт', 'Неоклассика', 'Хай-тек', 'Классический', 'Скандинавский', 'Поп-арт', 'Футуризм', 'Контемпорари', 'Модерн', 'Средиземноморский', 'Анимализм', 'Античный', '18_Конструктивизм', 'Неоклассика', 'Эклектика', 'Японский', 'Африканский', 'Ампир', 'Барокко']
class_names_last = ['стиля Арт-нуво', 'Современного стиля', 'Романтизма', 'Минимализма', 'стиля Прованс', 'стиля Лофт', 'Неоклассики', 'Хай-тек', 'Классического стиля', 'Скандинавского стиля', 'Поп-арт', 'Футуризм', 'стиля Контемпорари', 'Модерна', 'Средиземноморского', 'Анимализма', 'Античного стиля', 'Конструктивизма', 'Неоклассики', 'Эклектики', 'Японского стиля', 'Африканского стиля', 'стиля Ампир', 'стиля Барокко']

def run(image_path, model):
  # get images
  ds = tf.keras.preprocessing.image_dataset_from_directory(image_path, labels= None, image_size=image_size, batch_size= 1)
  
  # get predict
  pred_list = []
  for image in ds.as_numpy_iterator():
    pred = model.predict(image)
    pred = np.argsort(pred[0])
    top = list(pred[-3:])
    if 6 and 18 in top:
      if 6 and 18 in top[:1] or top[0] == 6 or top[0] == 18:
        del top[0]
        next_cl = pred[-4]
        top = [next_cl, *top]
      else:
        del top[1]
        next_cl = pred[-4]
        top = [next_cl, *top]
  
    pred_list.append(top)
  return pred_list

# main run

pred_list = run(image_path, model)
for p in pred_list:
  out = (f'Сеть определила стиль как {class_names[p[2]]}, с элементами {class_names_last[p[1]]} и {class_names_last[p[0]]}')
  print(out)